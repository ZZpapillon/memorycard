{"version":3,"sources":["poke.gif","logoP.png","ball.png","Scoreboard.js","pokeCall.js","Cards.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Scoreboard","_ref","count","bestScore","setBestScore","increment","reset","useEffect","storedBestScore","localStorage","getItem","parseInt","setItem","toString","React","createElement","className","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","getPokemonData","_asyncToGenerator","_callee","pokemonName","P","response","sprites","pokemonData","_context","Pokedex","getPokemonByName","image","front_default","t0","console","concat","_x","apply","arguments","pokemonNames","Cards","_useState","useState","_useState2","_slicedToArray","cards","setCards","_useState3","_useState4","setIsLoading","_ref2","selectedNames","randomName","newCards","card","getRandomPokemonName","includes","toUpperCase","id","clicked","fetchCards","unusedNames","filter","some","Math","floor","random","shuffleArray","array","shuffled","j","_ref3","map","onClick","shuffledCards","updatedCards","c","_objectSpread","setTimeout","handleCardClick","src","alt","App","setCount","logoP","pokeLogo","ball","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.30fd53e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/poke.eeb07187.gif\";","module.exports = __webpack_public_path__ + \"static/media/logoP.9e392382.png\";","module.exports = __webpack_public_path__ + \"static/media/ball.3f26bc9c.png\";","import React, { useEffect } from 'react';\n\nfunction Scoreboard({ count, bestScore, setBestScore, increment, reset }) {\n  useEffect(() => {\n    // Get the best score from local storage on component mount\n    const storedBestScore = localStorage.getItem('bestScore');\n    if (storedBestScore) {\n      setBestScore(parseInt(storedBestScore));\n    }\n  }, [setBestScore]);\n\n  useEffect(() => {\n    // Update the best score if the current score is higher\n    if (count > bestScore) {\n      setBestScore(count);\n      localStorage.setItem('bestScore', count.toString());\n    }\n  }, [count, bestScore, setBestScore]);\n  \n\n  return (\n    <div className='scoreboard'>\n      <div>Count: {count}</div>\n     \n      <div>Best Score: {bestScore}</div>\n      \n    </div>\n  );\n}\n\nexport default Scoreboard;\n","import { Pokedex } from 'pokeapi-js-wrapper';\n\nconst getPokemonData = async (pokemonName) => {\n  const P = new Pokedex();\n\n  try {\n    const response = await P.getPokemonByName(pokemonName);\n    const { name, sprites } = response;\n\n    const pokemonData = {\n      name: name,\n      image: sprites.front_default,\n    };\n\n    return pokemonData;\n  } catch (error) {\n    console.error(`Error fetching Pokemon data: ${error}`);\n    return null;\n  }\n};\n\nexport default getPokemonData;\n\n","import React, { useState, useEffect } from 'react';\nimport getPokemonData from './pokeCall';\n\nconst pokemonNames = [\n  'pikachu',\n  'charizard',\n  'bulbasaur',\n  'squirtle',\n  'jigglypuff',\n  'eevee',\n  'gengar',\n  'dragonite',\n  'lucario',\n  'mewtwo',      \n  'greninja',    \n  'gardevoir'    \n  // Add more Pokemon names as needed\n];\n\nconst Cards = ({ increment, reset }) => {\n  const [cards, setCards] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCards = async () => {\n       setIsLoading(true);\n      const selectedNames = [];\n      while (selectedNames.length < 12) {\n        const randomName = getRandomPokemonName();\n        if (!selectedNames.includes(randomName)) {\n          selectedNames.push(randomName);\n        }\n      }\n\n      const newCards = [];\n      for (let i = 0; i < 12; i++) {\n        const pokemonData = await getPokemonData(selectedNames[i]);\n        const name = pokemonData.name.charAt(0).toUpperCase() + pokemonData.name.slice(1)\n        const card = {\n          id: i + 1,\n          image: pokemonData.image,\n          name: name,\n          clicked: false\n        };\n        newCards.push(card);\n      }\n      \n      setCards(newCards);\n       setIsLoading(false);\n    };\n\n    fetchCards();\n  }, []);\n\n  const getRandomPokemonName = () => {\n    const unusedNames = pokemonNames.filter(\n      (name) => !cards.some((card) => card.image.includes(name))\n    );\n    const randomIndex = Math.floor(Math.random() * unusedNames.length);\n    return unusedNames[randomIndex];\n  };\n\n  \n\n  const handleCardClick = (card) => {\n    const shuffledCards = shuffleArray(cards);\n    setCards(shuffledCards);\n    if (card.clicked) {\n       reset();\n    const updatedCards = cards.map((c) => ({\n      ...c,\n      clicked: false,\n    }));\n    \n    setCards(shuffleArray(updatedCards));\n    \n    } else {\n      increment();\n      card.clicked = true\n    }\n  \n  setTimeout(() => {\n    \n  }, 800);\n};\n  const shuffleArray = (array) => {\n    const shuffled = array.slice();\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  return (\n    <div className=\"cardsContainer\">\n      {cards.map((card) => (\n        <div key={card.id} className=\"card\" onClick={() => handleCardClick(card)}>\n          <img src={card.image} alt={`Card ${card.id}`} />\n        <div>   {card.name} </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cards;\n","import Scoreboard from './Scoreboard';\nimport './App.css';\nimport Cards from './Cards';\nimport React, { useState, useEffect } from 'react';\nimport pokeLogo from './poke.gif'\nimport logoP from './logoP.png'\nimport ball from './ball.png'\nfunction App() {\n  const [count, setCount] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const reset = () => {\n    setCount(0);\n  };\n \n\n  return (\n    <div className='container'>\n      <div className='header'>\n      <Scoreboard count={count} bestScore={bestScore} setBestScore={setBestScore} increment={increment} reset={reset} />\n      </div> \n    <div className='sidebar'>\n       <div className='logo'> <img src={logoP} alt='Pokemon Logo' /> </div> \n       <div className='gif'> <img src={pokeLogo} alt='Pokemon Logo' /> </div> \n       <div className='text'>Memory</div>\n       <div className='ball'><img src={ball} /></div>\n\n</div>\n\n      <div className='content'>   \n      <Cards increment={increment} reset={reset} />\n      </div> \n      <div className='footer'>@Zdeslav Zaksek</div>\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}